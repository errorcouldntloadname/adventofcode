import math

station = (27,19)			#station location given by part1
#station = (11,13)

data = open("ceres.dat","r")
asteroid = set()

def calcDistance(tupel):
	a = tupel[0] - station[0]
	b = station[1] - tupel[1]	#y is counted reverse to math
	return round(math.sqrt(a**2 + b**2),10)
y = 0
for line in data:
	x = 0
	for i in line.rstrip():
		if i == "#":
			asteroid.add((x,y))
		x += 1
	y += 1

sight = {}
for current in asteroid:
	if station == current:
		continue
	deltax = current[0] - station[0]
	deltay = station[1] - current[1]	#y is counted reverse to math
	distance = calcDistance(current)
	if deltay >= 0:
		angle = round((math.acos(deltax/distance)/math.pi),7)
	else:
		angle = 2 - round((math.acos(deltax/distance)/math.pi),7)
	if angle in sight:
		sight[angle].append(current)
	else:
		sight[angle] = [current]


for i in sight:			#evry angle is sorted so closest asteroid is first
	sight[i].sort(key = calcDistance)

	

shot = (0,0)
ripasteroids = 0
running = True
while running:
	for i in reversed(range((2*(10**7))+1)):
		temp = i / (10**7)
		phi = round((temp+0.5) % 2,7)
		if phi in sight:
			shot = sight[phi].pop(0)
			if sight[phi] == []:
				del sight[phi]
			ripasteroids += 1
			print(ripasteroids)
			print(shot)
			print(phi)
			if ripasteroids == 314:
				running = False
				break
			

