data = open("wire.dat","r")

wires = [[],[]]
wires[0] = data.readline().rstrip().split(",")
wires[1] = data.readline().rstrip().split(",")


#returns set of all passed nodes
def walkPath(position,path,distance):
	dx,dy = 0,0
	if path[0] == "U":
		dy = 1
	elif path[0] == "D":
		dy = -1
	elif path[0] == "L":
		dx = -1
	elif path[0] == "R":
		dx = 1

	output = []
	for steps in range(int(path[1:])):
		x = position[0] + (steps + 1) * dx
		y = position[1] + (steps + 1) * dy
		output.append((x,y,distance+steps+1))
	return output
#end of walkPath


#dict containing coordinates and wich wire passed
field = {}
for wire in range(2):
	position = (0,0)
	distance = 0
	for instruction in wires[wire]:
		temp = walkPath(position,instruction,distance)
		for i in temp:
			pos = (i[0],i[1])
			#add wire to field if its not already in (by crossing itself)
			value = (wire,i[2])			
			if pos in field:
				if field[pos][-1][0] != wire:
					field[pos].append(value)
			else:
				field[pos] = [value]
		#update current pos
		position = (temp[-1][0],temp[-1][1])
		distance = temp[-1][2]


crossing = []
for i in field:
	if len(field[i]) == 2:
		temp = field[i]
		#manhattan distance (part1)
		#crossing.append(abs(i[0]) + abs(i[1]))
		#wire distance (part2)
		crossing.append(temp[0][1] + temp[1][1])
crossing.sort()
print(crossing[0])
