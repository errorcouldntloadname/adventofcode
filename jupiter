import copy
def listtotuple(twodim):
	temp = []	
	for i in range(4):
		temp.append((twodim[i][0],twodim[i][1],twodim[i][2]))
	return (temp[0],temp[1],temp[2],temp[3])

data = open("jupiter.dat","r")

Velocity = []
Coordinate = []	#list of x,y,z coordinate fo each moon
for line in data:
	temp = line.rstrip().split(",")
	temp[0] = temp[0].replace("<","")
	temp[2] = temp[2].replace(">","")
	tempi = []
	for i in range(3):
		tempi.append(int(temp[i].replace(" ","")[2:]))	#ignore x= etc.
	Coordinate.append(tempi)


pairs = [(0,1),(0,2),(0,3),(1,2),(1,3),(2,3)]


for i in range(4):
	temp = []
	for j in range(3):
		temp.append(0)
	Velocity.append(temp)

startcoor = copy.deepcopy(Coordinate)
startvel = copy.deepcopy(Velocity)
print(startvel)
#for step in range(1000):
step = 0
while True:	
	#progress time
	step += 1
	if step % 10000 == 0:
		print(step)
	#update velocity
	#apply gravity between each moon
	for moon in pairs:
		#apply on all 3 coordinates
		for c in range(3):
			if Coordinate[moon[0]][c] > Coordinate[moon[1]][c]:
				Velocity[moon[0]][c] += -1
				Velocity[moon[1]][c] += 1
			elif Coordinate[moon[0]][c] < Coordinate[moon[1]][c]:
				Velocity[moon[0]][c] += 1
				Velocity[moon[1]][c] += -1
	#update position
	for i in range(4):
		for c in range(3):
			Coordinate[i][c] += Velocity[i][c]
	
	if Coordinate == startcoor:
		if Velocity == startvel:
			print(startvel)
			break

print("Coordinate:")
print(Coordinate)
print("Velocity:")
print(Velocity)

Pot = []
Kin = []
total = 0
for c in Coordinate:
	Pot.append(abs(c[0])+abs(c[1])+abs(c[2]))
for v in Velocity:
	Kin.append(abs(v[0])+abs(v[1])+abs(v[2]))
for i in range(4):
	total += Kin[i] * Pot[i]

print(total)
